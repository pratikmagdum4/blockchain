{
	"id": "f9a8be1133e6ea6367e62ee934ea9e6b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"PrimeNumberSum.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\ncontract PrimeNumberSum {\r\nfunction isPrime(uint256 number) internal pure returns (bool) {\r\nif (number <= 1) {\r\nreturn false;\r\n}\r\nfor (uint256 i = 2; i <= number / 2; i++) {\r\nif (number % i == 0) {\r\nreturn false;\r\n}\r\n}\r\nreturn true;\r\n}\r\nfunction sumPrimes() public pure returns (uint256) {\r\nuint256 sum = 0;\r\nfor (uint256 i = 2; i <= 300; i++) {\r\nif (isPrime(i)) {\r\nsum += i;\r\n\r\n}\r\n}\r\nreturn sum;\r\n}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"PrimeNumberSum.sol": {
				"PrimeNumberSum": {
					"abi": [
						{
							"inputs": [],
							"name": "sumPrimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"PrimeNumberSum.sol\":58:460  contract PrimeNumberSum {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"PrimeNumberSum.sol\":58:460  contract PrimeNumberSum {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x351dcf81\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"PrimeNumberSum.sol\":295:457  function sumPrimes() public pure returns (uint256) {\r... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"PrimeNumberSum.sol\":337:344  uint256 */\n      0x00\n        /* \"PrimeNumberSum.sol\":349:360  uint256 sum */\n      dup1\n        /* \"PrimeNumberSum.sol\":363:364  0 */\n      0x00\n        /* \"PrimeNumberSum.sol\":349:364  uint256 sum = 0 */\n      swap1\n      pop\n        /* \"PrimeNumberSum.sol\":372:381  uint256 i */\n      0x00\n        /* \"PrimeNumberSum.sol\":384:385  2 */\n      0x02\n        /* \"PrimeNumberSum.sol\":372:385  uint256 i = 2 */\n      swap1\n      pop\n        /* \"PrimeNumberSum.sol\":367:441  for (uint256 i = 2; i <= 300; i++) {\r... */\n    tag_9:\n        /* \"PrimeNumberSum.sol\":392:395  300 */\n      0x012c\n        /* \"PrimeNumberSum.sol\":387:388  i */\n      dup2\n        /* \"PrimeNumberSum.sol\":387:395  i <= 300 */\n      gt\n        /* \"PrimeNumberSum.sol\":367:441  for (uint256 i = 2; i <= 300; i++) {\r... */\n      tag_10\n      jumpi\n        /* \"PrimeNumberSum.sol\":409:419  isPrime(i) */\n      tag_12\n        /* \"PrimeNumberSum.sol\":417:418  i */\n      dup2\n        /* \"PrimeNumberSum.sol\":409:416  isPrime */\n      tag_13\n        /* \"PrimeNumberSum.sol\":409:419  isPrime(i) */\n      jump\t// in\n    tag_12:\n        /* \"PrimeNumberSum.sol\":405:438  if (isPrime(i)) {\r... */\n      iszero\n      tag_14\n      jumpi\n        /* \"PrimeNumberSum.sol\":431:432  i */\n      dup1\n        /* \"PrimeNumberSum.sol\":424:432  sum += i */\n      dup3\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      swap2\n      pop\n        /* \"PrimeNumberSum.sol\":405:438  if (isPrime(i)) {\r... */\n    tag_14:\n        /* \"PrimeNumberSum.sol\":397:400  i++ */\n      dup1\n      dup1\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      swap2\n      pop\n      pop\n        /* \"PrimeNumberSum.sol\":367:441  for (uint256 i = 2; i <= 300; i++) {\r... */\n      jump(tag_9)\n    tag_10:\n      pop\n        /* \"PrimeNumberSum.sol\":450:453  sum */\n      dup1\n        /* \"PrimeNumberSum.sol\":443:453  return sum */\n      swap2\n      pop\n      pop\n        /* \"PrimeNumberSum.sol\":295:457  function sumPrimes() public pure returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"PrimeNumberSum.sol\":85:293  function isPrime(uint256 number) internal pure returns (bool) {\r... */\n    tag_13:\n        /* \"PrimeNumberSum.sol\":141:145  bool */\n      0x00\n        /* \"PrimeNumberSum.sol\":164:165  1 */\n      0x01\n        /* \"PrimeNumberSum.sol\":154:160  number */\n      dup3\n        /* \"PrimeNumberSum.sol\":154:165  number <= 1 */\n      gt\n        /* \"PrimeNumberSum.sol\":150:186  if (number <= 1) {\r... */\n      tag_20\n      jumpi\n        /* \"PrimeNumberSum.sol\":177:182  false */\n      0x00\n        /* \"PrimeNumberSum.sol\":170:182  return false */\n      swap1\n      pop\n      jump(tag_19)\n        /* \"PrimeNumberSum.sol\":150:186  if (number <= 1) {\r... */\n    tag_20:\n        /* \"PrimeNumberSum.sol\":193:202  uint256 i */\n      0x00\n        /* \"PrimeNumberSum.sol\":205:206  2 */\n      0x02\n        /* \"PrimeNumberSum.sol\":193:206  uint256 i = 2 */\n      swap1\n      pop\n        /* \"PrimeNumberSum.sol\":188:276  for (uint256 i = 2; i <= number / 2; i++) {\r... */\n    tag_21:\n        /* \"PrimeNumberSum.sol\":222:223  2 */\n      0x02\n        /* \"PrimeNumberSum.sol\":213:219  number */\n      dup4\n        /* \"PrimeNumberSum.sol\":213:223  number / 2 */\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n        /* \"PrimeNumberSum.sol\":208:209  i */\n      dup2\n        /* \"PrimeNumberSum.sol\":208:223  i <= number / 2 */\n      gt\n        /* \"PrimeNumberSum.sol\":188:276  for (uint256 i = 2; i <= number / 2; i++) {\r... */\n      tag_22\n      jumpi\n        /* \"PrimeNumberSum.sol\":251:252  0 */\n      0x00\n        /* \"PrimeNumberSum.sol\":246:247  i */\n      dup2\n        /* \"PrimeNumberSum.sol\":237:243  number */\n      dup5\n        /* \"PrimeNumberSum.sol\":237:247  number % i */\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"PrimeNumberSum.sol\":237:252  number % i == 0 */\n      eq\n        /* \"PrimeNumberSum.sol\":233:273  if (number % i == 0) {\r... */\n      iszero\n      tag_28\n      jumpi\n        /* \"PrimeNumberSum.sol\":264:269  false */\n      0x00\n        /* \"PrimeNumberSum.sol\":257:269  return false */\n      swap2\n      pop\n      pop\n      jump(tag_19)\n        /* \"PrimeNumberSum.sol\":233:273  if (number % i == 0) {\r... */\n    tag_28:\n        /* \"PrimeNumberSum.sol\":225:228  i++ */\n      dup1\n      dup1\n      tag_29\n      swap1\n      tag_18\n      jump\t// in\n    tag_29:\n      swap2\n      pop\n      pop\n        /* \"PrimeNumberSum.sol\":188:276  for (uint256 i = 2; i <= number / 2; i++) {\r... */\n      jump(tag_21)\n    tag_22:\n      pop\n        /* \"PrimeNumberSum.sol\":285:289  true */\n      0x01\n        /* \"PrimeNumberSum.sol\":278:289  return true */\n      swap1\n      pop\n        /* \"PrimeNumberSum.sol\":85:293  function isPrime(uint256 number) internal pure returns (bool) {\r... */\n    tag_19:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_31:\n        /* \"#utility.yul\":94:118   */\n      tag_33\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":72:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_36\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_31\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":229:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:664   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":418:438   */\n      tag_38\n        /* \"#utility.yul\":436:437   */\n      dup3\n        /* \"#utility.yul\":418:438   */\n      tag_34\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":413:438   */\n      swap2\n      pop\n        /* \"#utility.yul\":452:472   */\n      tag_39\n        /* \"#utility.yul\":470:471   */\n      dup4\n        /* \"#utility.yul\":452:472   */\n      tag_34\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":447:472   */\n      swap3\n      pop\n        /* \"#utility.yul\":606:607   */\n      dup3\n        /* \"#utility.yul\":538:604   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":534:608   */\n      sub\n        /* \"#utility.yul\":531:532   */\n      dup3\n        /* \"#utility.yul\":528:609   */\n      gt\n        /* \"#utility.yul\":525:527   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":612:630   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":525:527   */\n    tag_40:\n        /* \"#utility.yul\":656:657   */\n      dup3\n        /* \"#utility.yul\":653:654   */\n      dup3\n        /* \"#utility.yul\":649:658   */\n      add\n        /* \"#utility.yul\":642:658   */\n      swap1\n      pop\n        /* \"#utility.yul\":403:664   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":670:855   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":727:747   */\n      tag_44\n        /* \"#utility.yul\":745:746   */\n      dup3\n        /* \"#utility.yul\":727:747   */\n      tag_34\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":722:747   */\n      swap2\n      pop\n        /* \"#utility.yul\":761:781   */\n      tag_45\n        /* \"#utility.yul\":779:780   */\n      dup4\n        /* \"#utility.yul\":761:781   */\n      tag_34\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":756:781   */\n      swap3\n      pop\n        /* \"#utility.yul\":800:801   */\n      dup3\n        /* \"#utility.yul\":790:792   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":805:823   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":790:792   */\n    tag_46:\n        /* \"#utility.yul\":847:848   */\n      dup3\n        /* \"#utility.yul\":844:845   */\n      dup3\n        /* \"#utility.yul\":840:849   */\n      div\n        /* \"#utility.yul\":835:849   */\n      swap1\n      pop\n        /* \"#utility.yul\":712:855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":861:938   */\n    tag_34:\n      0x00\n        /* \"#utility.yul\":927:932   */\n      dup2\n        /* \"#utility.yul\":916:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":906:938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":944:1177   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":1006:1030   */\n      tag_51\n        /* \"#utility.yul\":1024:1029   */\n      dup3\n        /* \"#utility.yul\":1006:1030   */\n      tag_34\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":997:1030   */\n      swap2\n      pop\n        /* \"#utility.yul\":1052:1118   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1045:1050   */\n      dup3\n        /* \"#utility.yul\":1042:1119   */\n      eq\n        /* \"#utility.yul\":1039:1041   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1122:1140   */\n      tag_53\n      tag_42\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1039:1041   */\n    tag_52:\n        /* \"#utility.yul\":1169:1170   */\n      0x01\n        /* \"#utility.yul\":1162:1167   */\n      dup3\n        /* \"#utility.yul\":1158:1171   */\n      add\n        /* \"#utility.yul\":1151:1171   */\n      swap1\n      pop\n        /* \"#utility.yul\":987:1177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1183:1359   */\n    tag_27:\n      0x00\n        /* \"#utility.yul\":1232:1252   */\n      tag_55\n        /* \"#utility.yul\":1250:1251   */\n      dup3\n        /* \"#utility.yul\":1232:1252   */\n      tag_34\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1227:1252   */\n      swap2\n      pop\n        /* \"#utility.yul\":1266:1286   */\n      tag_56\n        /* \"#utility.yul\":1284:1285   */\n      dup4\n        /* \"#utility.yul\":1266:1286   */\n      tag_34\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1261:1286   */\n      swap3\n      pop\n        /* \"#utility.yul\":1305:1306   */\n      dup3\n        /* \"#utility.yul\":1295:1297   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":1310:1328   */\n      tag_58\n      tag_48\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1295:1297   */\n    tag_57:\n        /* \"#utility.yul\":1351:1352   */\n      dup3\n        /* \"#utility.yul\":1348:1349   */\n      dup3\n        /* \"#utility.yul\":1344:1353   */\n      mod\n        /* \"#utility.yul\":1339:1353   */\n      swap1\n      pop\n        /* \"#utility.yul\":1217:1359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1365:1545   */\n    tag_42:\n        /* \"#utility.yul\":1413:1490   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1410:1411   */\n      0x00\n        /* \"#utility.yul\":1403:1491   */\n      mstore\n        /* \"#utility.yul\":1510:1514   */\n      0x11\n        /* \"#utility.yul\":1507:1508   */\n      0x04\n        /* \"#utility.yul\":1500:1515   */\n      mstore\n        /* \"#utility.yul\":1534:1538   */\n      0x24\n        /* \"#utility.yul\":1531:1532   */\n      0x00\n        /* \"#utility.yul\":1524:1539   */\n      revert\n        /* \"#utility.yul\":1551:1731   */\n    tag_48:\n        /* \"#utility.yul\":1599:1676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1596:1597   */\n      0x00\n        /* \"#utility.yul\":1589:1677   */\n      mstore\n        /* \"#utility.yul\":1696:1700   */\n      0x12\n        /* \"#utility.yul\":1693:1694   */\n      0x04\n        /* \"#utility.yul\":1686:1701   */\n      mstore\n        /* \"#utility.yul\":1720:1724   */\n      0x24\n        /* \"#utility.yul\":1717:1718   */\n      0x00\n        /* \"#utility.yul\":1710:1725   */\n      revert\n\n    auxdata: 0xa264697066735822122001647603b23a045f3ffabe5eff5c24d394938d690ba26020310a69a1f1c2703364736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102cf806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063351dcf8114610030575b600080fd5b61003861004e565b6040516100459190610115565b60405180910390f35b600080600090506000600290505b61012c81116100955761006e8161009d565b1561008257808261007f9190610130565b91505b808061008d906101c1565b91505061005c565b508091505090565b6000600182116100b05760009050610101565b6000600290505b6002836100c49190610186565b81116100fb57600081846100d8919061020a565b14156100e8576000915050610101565b80806100f3906101c1565b9150506100b7565b50600190505b919050565b61010f816101b7565b82525050565b600060208201905061012a6000830184610106565b92915050565b600061013b826101b7565b9150610146836101b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561017b5761017a61023b565b5b828201905092915050565b6000610191826101b7565b915061019c836101b7565b9250826101ac576101ab61026a565b5b828204905092915050565b6000819050919050565b60006101cc826101b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101ff576101fe61023b565b5b600182019050919050565b6000610215826101b7565b9150610220836101b7565b9250826102305761022f61026a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122001647603b23a045f3ffabe5eff5c24d394938d690ba26020310a69a1f1c2703364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x351DCF81 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH2 0x12C DUP2 GT PUSH2 0x95 JUMPI PUSH2 0x6E DUP2 PUSH2 0x9D JUMP JUMPDEST ISZERO PUSH2 0x82 JUMPI DUP1 DUP3 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x8D SWAP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0xB0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x101 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP4 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST DUP2 GT PUSH2 0xFB JUMPI PUSH1 0x0 DUP2 DUP5 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST EQ ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x101 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF3 SWAP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F DUP2 PUSH2 0x1B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x146 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x23B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191 DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1AC JUMPI PUSH2 0x1AB PUSH2 0x26A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x23B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215 DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x220 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x26A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH5 0x7603B23A04 0x5F EXTCODEHASH STATICCALL 0xBE 0x5E SELFDESTRUCT 0x5C 0x24 0xD3 SWAP5 SWAP4 DUP14 PUSH10 0xBA26020310A69A1F1C2 PUSH17 0x3364736F6C634300080000330000000000 ",
							"sourceMap": "58:402:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1734:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "403:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "413:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "436:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "418:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "413:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "447:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "470:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "452:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "452:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "447:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "610:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "612:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "612:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "612:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "531:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "538:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "606:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "534:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "528:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:81:1"
															},
															"nodeType": "YulIf",
															"src": "525:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "642:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "653:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "656:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "649:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "642:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "390:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "393:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "399:3:1",
														"type": ""
													}
												],
												"src": "359:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "712:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "722:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "745:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "727:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "722:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "756:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "779:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "761:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "761:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "756:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "803:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "805:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "805:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "805:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "800:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "793:9:1"
															},
															"nodeType": "YulIf",
															"src": "790:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "835:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "844:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "847:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "840:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "840:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "835:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "701:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "704:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "710:1:1",
														"type": ""
													}
												],
												"src": "670:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "906:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "916:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "927:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "916:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "888:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "898:7:1",
														"type": ""
													}
												],
												"src": "861:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "987:190:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "997:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1024:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1006:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "997:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1122:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1045:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1052:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1042:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1042:77:1"
															},
															"nodeType": "YulIf",
															"src": "1039:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1151:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1162:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1169:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1158:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1158:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1151:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "973:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "983:3:1",
														"type": ""
													}
												],
												"src": "944:233:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:142:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1227:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1250:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1232:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1227:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1284:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1266:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1261:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1308:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1310:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1310:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1310:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1305:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:9:1"
															},
															"nodeType": "YulIf",
															"src": "1295:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1339:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1348:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1351:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "1344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1344:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1339:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1206:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1209:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1215:1:1",
														"type": ""
													}
												],
												"src": "1183:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1410:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1413:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1510:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1500:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1531:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1534:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1524:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1365:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1579:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1596:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1589:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1696:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1686:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1686:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1717:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1710:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1551:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063351dcf8114610030575b600080fd5b61003861004e565b6040516100459190610115565b60405180910390f35b600080600090506000600290505b61012c81116100955761006e8161009d565b1561008257808261007f9190610130565b91505b808061008d906101c1565b91505061005c565b508091505090565b6000600182116100b05760009050610101565b6000600290505b6002836100c49190610186565b81116100fb57600081846100d8919061020a565b14156100e8576000915050610101565b80806100f3906101c1565b9150506100b7565b50600190505b919050565b61010f816101b7565b82525050565b600060208201905061012a6000830184610106565b92915050565b600061013b826101b7565b9150610146836101b7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561017b5761017a61023b565b5b828201905092915050565b6000610191826101b7565b915061019c836101b7565b9250826101ac576101ab61026a565b5b828204905092915050565b6000819050919050565b60006101cc826101b7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156101ff576101fe61023b565b5b600182019050919050565b6000610215826101b7565b9150610220836101b7565b9250826102305761022f61026a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122001647603b23a045f3ffabe5eff5c24d394938d690ba26020310a69a1f1c2703364736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x351DCF81 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH2 0x12C DUP2 GT PUSH2 0x95 JUMPI PUSH2 0x6E DUP2 PUSH2 0x9D JUMP JUMPDEST ISZERO PUSH2 0x82 JUMPI DUP1 DUP3 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x130 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x8D SWAP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5C JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 GT PUSH2 0xB0 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x101 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP JUMPDEST PUSH1 0x2 DUP4 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST DUP2 GT PUSH2 0xFB JUMPI PUSH1 0x0 DUP2 DUP5 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x20A JUMP JUMPDEST EQ ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x101 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xF3 SWAP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB7 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F DUP2 PUSH2 0x1B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x146 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x17B JUMPI PUSH2 0x17A PUSH2 0x23B JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191 DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1AC JUMPI PUSH2 0x1AB PUSH2 0x26A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CC DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FF JUMPI PUSH2 0x1FE PUSH2 0x23B JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215 DUP3 PUSH2 0x1B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x220 DUP4 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x230 JUMPI PUSH2 0x22F PUSH2 0x26A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD PUSH5 0x7603B23A04 0x5F EXTCODEHASH STATICCALL 0xBE 0x5E SELFDESTRUCT 0x5C 0x24 0xD3 SWAP5 SWAP4 DUP14 PUSH10 0xBA26020310A69A1F1C2 PUSH17 0x3364736F6C634300080000330000000000 ",
							"sourceMap": "58:402:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:162;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;337:7;349:11;363:1;349:15;;372:9;384:1;372:13;;367:74;392:3;387:1;:8;367:74;;409:10;417:1;409:7;:10::i;:::-;405:33;;;431:1;424:8;;;;;:::i;:::-;;;405:33;397:3;;;;;:::i;:::-;;;;367:74;;;;450:3;443:10;;;295:162;:::o;85:208::-;141:4;164:1;154:6;:11;150:36;;177:5;170:12;;;;150:36;193:9;205:1;193:13;;188:88;222:1;213:6;:10;;;;:::i;:::-;208:1;:15;188:88;;251:1;246;237:6;:10;;;;:::i;:::-;:15;233:40;;;264:5;257:12;;;;;233:40;225:3;;;;;:::i;:::-;;;;188:88;;;;285:4;278:11;;85:208;;;;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:222::-;;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;229:124;;;;:::o;359:305::-;;418:20;436:1;418:20;:::i;:::-;413:25;;452:20;470:1;452:20;:::i;:::-;447:25;;606:1;538:66;534:74;531:1;528:81;525:2;;;612:18;;:::i;:::-;525:2;656:1;653;649:9;642:16;;403:261;;;;:::o;670:185::-;;727:20;745:1;727:20;:::i;:::-;722:25;;761:20;779:1;761:20;:::i;:::-;756:25;;800:1;790:2;;805:18;;:::i;:::-;790:2;847:1;844;840:9;835:14;;712:143;;;;:::o;861:77::-;;927:5;916:16;;906:32;;;:::o;944:233::-;;1006:24;1024:5;1006:24;:::i;:::-;997:33;;1052:66;1045:5;1042:77;1039:2;;;1122:18;;:::i;:::-;1039:2;1169:1;1162:5;1158:13;1151:20;;987:190;;;:::o;1183:176::-;;1232:20;1250:1;1232:20;:::i;:::-;1227:25;;1266:20;1284:1;1266:20;:::i;:::-;1261:25;;1305:1;1295:2;;1310:18;;:::i;:::-;1295:2;1351:1;1348;1344:9;1339:14;;1217:142;;;;:::o;1365:180::-;1413:77;1410:1;1403:88;1510:4;1507:1;1500:15;1534:4;1531:1;1524:15;1551:180;1599:77;1596:1;1589:88;1696:4;1693:1;1686:15;1720:4;1717:1;1710:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143800",
								"executionCost": "190",
								"totalCost": "143990"
							},
							"external": {
								"sumPrimes()": "infinite"
							},
							"internal": {
								"isPrime(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 460,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001647603b23a045f3ffabe5eff5c24d394938d690ba26020310a69a1f1c2703364736f6c63430008000033",
									".code": [
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "351DCF81"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 460,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 337,
											"end": 344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 349,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 349,
											"end": 364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 372,
											"end": 381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 372,
											"end": 385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 372,
											"end": 385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 367,
											"end": 441,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 392,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "12C"
										},
										{
											"begin": 387,
											"end": 388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 387,
											"end": 395,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 367,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 409,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 417,
											"end": 418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 409,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 409,
											"end": 419,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 409,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 409,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 438,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 405,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 405,
											"end": 438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 431,
											"end": 432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 424,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 424,
											"end": 432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 424,
											"end": 432,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 424,
											"end": 432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 438,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 405,
											"end": 438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 397,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 397,
											"end": 400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 400,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 397,
											"end": 400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 397,
											"end": 400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 367,
											"end": 441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 441,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 367,
											"end": 441,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 367,
											"end": 441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 450,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 443,
											"end": 453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 443,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 295,
											"end": 457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 85,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 85,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 141,
											"end": 145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 154,
											"end": 160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 154,
											"end": 165,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 150,
											"end": 186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 177,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 170,
											"end": 182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 170,
											"end": 182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 170,
											"end": 182,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 186,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 206,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 193,
											"end": 206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 188,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 188,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 213,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 213,
											"end": 223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 213,
											"end": 223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 213,
											"end": 223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 213,
											"end": 223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 213,
											"end": 223,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 213,
											"end": 223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 208,
											"end": 209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 208,
											"end": 223,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 188,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 251,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 246,
											"end": 247,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 237,
											"end": 247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 237,
											"end": 247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 237,
											"end": 247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 237,
											"end": 252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 273,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 233,
											"end": 273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 233,
											"end": 273,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 264,
											"end": 269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 257,
											"end": 269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 257,
											"end": 269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 257,
											"end": 269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 257,
											"end": 269,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 273,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 233,
											"end": 273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 225,
											"end": 228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 225,
											"end": 228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 228,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 225,
											"end": 228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 225,
											"end": 228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 188,
											"end": 276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 188,
											"end": 276,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 188,
											"end": 276,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 188,
											"end": 276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 285,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 278,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 293,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 85,
											"end": 293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 72,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 359,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 436,
											"end": 437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 418,
											"end": 438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 418,
											"end": 438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 413,
											"end": 438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 413,
											"end": 438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 452,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 470,
											"end": 471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 452,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 452,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 447,
											"end": 472,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 447,
											"end": 472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 538,
											"end": 604,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 534,
											"end": 608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 531,
											"end": 532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 528,
											"end": 609,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 527,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 656,
											"end": 657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 653,
											"end": 654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 649,
											"end": 658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 642,
											"end": 658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 403,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 670,
											"end": 855,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 670,
											"end": 855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 670,
											"end": 855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 745,
											"end": 746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 727,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 722,
											"end": 747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 722,
											"end": 747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 761,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 761,
											"end": 781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 805,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 805,
											"end": 823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 790,
											"end": 792,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 847,
											"end": 848,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 845,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 835,
											"end": 849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 712,
											"end": 855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 712,
											"end": 855,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 712,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 712,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 712,
											"end": 855,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 861,
											"end": 938,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 861,
											"end": 938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 861,
											"end": 938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 916,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 916,
											"end": 932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 906,
											"end": 938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 906,
											"end": 938,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 1177,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 944,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1006,
											"end": 1030,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1006,
											"end": 1030,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1006,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1050,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1042,
											"end": 1119,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1122,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1039,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1170,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1151,
											"end": 1171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1177,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1183,
											"end": 1359,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1183,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1250,
											"end": 1251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1232,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1252,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1266,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1286,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1261,
											"end": 1286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1351,
											"end": 1352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1359,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1359,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1365,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1365,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1490,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1410,
											"end": 1411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1491,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1500,
											"end": 1515,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1531,
											"end": 1532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1539,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1551,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1599,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1596,
											"end": 1597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1700,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1686,
											"end": 1701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1717,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"sumPrimes()": "351dcf81"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"sumPrimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"PrimeNumberSum.sol\":\"PrimeNumberSum\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"PrimeNumberSum.sol\":{\"keccak256\":\"0x1d16b09b35c7ab3a69617859a9311086f5a3b9f1b36eeccd6aee7bd8233fb084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1de0376a45201a6e80bdfab07d050c71ec51ed1a4a203a8d8fcbc9bcc997375a\",\"dweb:/ipfs/QmfEZEmGY87UMdChqqTQ8WwMyEnVGKyRgu9kWmgoN4dJdL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"PrimeNumberSum.sol": {
				"ast": {
					"absolutePath": "PrimeNumberSum.sol",
					"exportedSymbols": {
						"PrimeNumberSum": [
							75
						]
					},
					"id": 76,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "PrimeNumberSum",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "147:146:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "154:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "31",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "164:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "154:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 14,
												"nodeType": "IfStatement",
												"src": "150:36:0",
												"trueBody": {
													"id": 13,
													"nodeType": "Block",
													"src": "167:19:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 11,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "177:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 7,
															"id": 12,
															"nodeType": "Return",
															"src": "170:12:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 36,
													"nodeType": "Block",
													"src": "230:46:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 27,
																		"name": "number",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "237:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 28,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "246:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "237:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "251:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "237:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 35,
															"nodeType": "IfStatement",
															"src": "233:40:0",
															"trueBody": {
																"id": 34,
																"nodeType": "Block",
																"src": "254:19:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 32,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "264:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 7,
																		"id": 33,
																		"nodeType": "Return",
																		"src": "257:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 20,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "213:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "222:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "213:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "208:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 37,
												"initializationExpression": {
													"assignments": [
														16
													],
													"declarations": [
														{
															"constant": false,
															"id": 16,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 37,
															"src": "193:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 15,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "193:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 18,
													"initialValue": {
														"hexValue": "32",
														"id": 17,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "205:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "193:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "225:3:0",
														"subExpression": {
															"id": 24,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "225:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 26,
													"nodeType": "ExpressionStatement",
													"src": "225:3:0"
												},
												"nodeType": "ForStatement",
												"src": "188:88:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 7,
												"id": 39,
												"nodeType": "Return",
												"src": "278:11:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isPrime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "number",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "102:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "101:16:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "141:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 5,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "141:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "140:6:0"
									},
									"scope": 75,
									"src": "85:208:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "346:111:0",
										"statements": [
											{
												"assignments": [
													47
												],
												"declarations": [
													{
														"constant": false,
														"id": 47,
														"mutability": "mutable",
														"name": "sum",
														"nodeType": "VariableDeclaration",
														"scope": 73,
														"src": "349:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 46,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "349:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"hexValue": "30",
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "363:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "349:15:0"
											},
											{
												"body": {
													"id": 69,
													"nodeType": "Block",
													"src": "402:39:0",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"id": 61,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 51,
																		"src": "417:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 60,
																	"name": "isPrime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "409:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) pure returns (bool)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "409:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 68,
															"nodeType": "IfStatement",
															"src": "405:33:0",
															"trueBody": {
																"id": 67,
																"nodeType": "Block",
																"src": "421:17:0",
																"statements": [
																	{
																		"expression": {
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 63,
																				"name": "sum",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 47,
																				"src": "424:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 64,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 51,
																				"src": "431:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "424:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 66,
																		"nodeType": "ExpressionStatement",
																		"src": "424:8:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 54,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "387:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "333030",
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "392:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_300_by_1",
															"typeString": "int_const 300"
														},
														"value": "300"
													},
													"src": "387:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 70,
												"initializationExpression": {
													"assignments": [
														51
													],
													"declarations": [
														{
															"constant": false,
															"id": 51,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 70,
															"src": "372:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 50,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "372:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 53,
													"initialValue": {
														"hexValue": "32",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "384:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "372:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "397:3:0",
														"subExpression": {
															"id": 57,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "397:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 59,
													"nodeType": "ExpressionStatement",
													"src": "397:3:0"
												},
												"nodeType": "ForStatement",
												"src": "367:74:0"
											},
											{
												"expression": {
													"id": 71,
													"name": "sum",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 47,
													"src": "450:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 45,
												"id": 72,
												"nodeType": "Return",
												"src": "443:10:0"
											}
										]
									},
									"functionSelector": "351dcf81",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sumPrimes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:9:0"
									},
									"scope": 75,
									"src": "295:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 76,
							"src": "58:402:0"
						}
					],
					"src": "33:427:0"
				},
				"id": 0
			}
		}
	}
}